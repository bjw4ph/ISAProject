mysql-cmdline:
    image: mysql:5.7.17
    container_name: mysql-cmdline
    external_links:
      - mysql:db
    command: bash -c "echo 'drop user if exists '\''www'\''@'\''%'\'';create user '\''www'\''@'\''%'\'' identified by '\''$$3cureUS'\'';drop database if exists cs4501;create database cs4501 character set utf8;grant all on cs4501.* to '\''www'\''@'\''%'\'';drop database if exists test_cs4501; grant all on test_cs4501.* to '\''www'\''@'\''%'\'';' > createUser.sql && cat createUser.sql && mysql -uroot -p'$$3cureUS' -h db < createUser.sql"

models:
    image: tp33/django
    container_name: isa_models
    external_links:
      -  mysql:db
    # links:
    #   - selenium:selenium
    volumes:
      - ./model_app:/app
    ports:
      - "8001:8000"
    command: bash -c "sleep 30 && python manage.py makemigrations model_app && python manage.py migrate && python manage.py loaddata ./model_app/db.json &&  mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/model_app/wsgi.py"

exp:
   image: tp33/django
   container_name: isa_exp
   links:
      - models:models-api
      - kafka:kafka_container
      - es:es
      # - selenium:selenium
   ports:
      - "8002:8000"
   volumes:
      - ./exp_app:/app
   command: bash -c "mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/exp_app/wsgi.py"

web:
   image: tp33/django
   container_name: isa_web
   links:
      - exp:exp-api
      - selenium:selenium
   ports:
      - "8000:8000"
   volumes:
      - ./web_app:/app
   command: bash -c "pip install selenium && mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/web_app/wsgi.py"

web2:
   image: tp33/django
   container_name: isa_web2
   links:
      - exp:exp-api
      - selenium:selenium
   ports:
      - "8003:8000"
   volumes:
      - ./web_app:/app
   command: bash -c "pip install selenium && mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/web_app/wsgi.py"

kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
    hostname: kafka

es:
    image: elasticsearch:2.0
    container_name: es
    volumes:
      - ./model_app:/app
    ports:
        - "9200:9200"

batch:
    image: tp33/django
    container_name: batch
    links:
        - kafka:kafka
        - es:es
    volumes:
        - ./batch:/app
    command: bash -c "python batch_script.py"

selenium:
    image: selenium/standalone-firefox:3.3.1-cesium
    container_name: selenium
    # links:
    #     - web:web-app
    ports:
        - "4444:4444"
    # environment:
    #     ADVERTISED_HOST: selenium
    #     ADVERTISED_PORT: 4444
    # hostname: selenium
    volumes:
        - ./selenium:/dev/shm

hap_balance:
    image: my-haproxy
    container_name: hap_balance
    links:
        - web:web
        - web2:web2
    volumes:
        - ./haproxy:/app
    ports:
        - "80:80"

spark-master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./batch:/tmp/data

spark-worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./batch:/tmp/data
