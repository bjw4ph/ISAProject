models:
    image: tp33/django
    container_name: isa_models
    external_links:
      -  mysql:db
    volumes:
      - ./model_app:/app
    ports:
      - "8001:8000"
    command: bash -c "python manage.py makemigrations model_app && python manage.py migrate && python manage.py loaddata ./model_app/db.json &&  mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/model_app/wsgi.py"

exp:
   image: tp33/django
   container_name: isa_exp
   links:
      - models:models-api
      - es:es
   ports:
      - "8002:8000"
   volumes:
      - ./exp_app:/app
   command: bash -c "mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/exp_app/wsgi.py"

web:
   image: tp33/django
   container_name: isa_web
   links:
      - exp:exp-api
   ports:
      - "8000:8000"
   volumes:
      - ./web_app:/app
   command: bash -c "mod_wsgi-express start-server --log-to-terminal --working-directory /app --reload-on-changes /app/web_app/wsgi.py"

kafka:
    image: spotify/kafka
    container_name: kafka
    environment:
        ADVERTISED_HOST: kafka
        ADVERTISED_PORT: 9092
    hostname: kafka

es:
    image: elasticsearch:2.0
    container_name: es
    volumes:
      - ./model_app:/app
    ports:
        - "9200:9200"
    #command: 'bash -c "cd .. && cd .. && cd .. && cd app && cd model_app && curl -s -H "Content-Type: application/x-ndjson/" -XPOST localhost:9200/_bulk --data-binary "@es.json""'
    #command: bash -c "cd .. && cd .. && cd .. && cd app && cd model_app"


batch:
    image: tp33/django
    container_name: batch
    links:
        - kafka:kafka
        - es:es
#TODO: write command to run script
